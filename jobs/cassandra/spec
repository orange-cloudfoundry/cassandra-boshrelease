---
name: cassandra

packages:
  - cassandra
  - openjdk

provides:
  - name: cassandra
    type: cassandra
    properties:
      - cass_pwd
      - native_transport_port
      - client_encryption.enabled
      - validate_ssl_TF
      - cluster_name

consumes:
  - name: seeds
    type: cassandra

templates:
  bin/pre-start.sh: bin/pre-start
  bpm.yml: config/bpm.yml
  bpm-prestart: bpm-prestart
  bin/cassandra_ctl: bin/cassandra_ctl
  bin/monit_debugger: bin/monit_debugger
  data/properties.sh.erb: data/properties.sh
  helpers/ctl_setup.sh: helpers/ctl_setup.sh
  helpers/ctl_utils.sh: helpers/ctl_utils.sh
  config/cassandra-jaas.config.erb: conf/cassandra-jaas.config
  config/jvm.options.erb: conf/jvm.options
  config/cassandra.yaml.erb: conf/cassandra.yaml
  config/cassandra-env.sh.erb: conf/cassandra-env.sh
  config/cassandra-rackdc.properties.erb: conf/cassandra-rackdc.properties
  config/cassandra-topology.properties.erb: conf/cassandra-topology.properties
  config/logback.xml.erb: conf/logback.xml
  config/logback-tools.xml.erb: conf/logback-tools.xml
  config/commitlog_archiving.properties.erb: conf/commitlog_archiving.properties
#  bin/generate_ssl_cert.sh: bin/generate_ssl_cert.sh
#  ssl/cassandradb.ca.erb: ssl/cassandradb.ca
#  ssl/cassandradb.pem.erb: ssl/cassandradb.pem
#  ssl2/cert: config/certs/node.crt
#  ssl2/cert_ca: config/certs/ca.crt
#  ssl2/cert_private_key: config/certs/node.key
#  ssl2/ssl_env.ctl.erb: config/certs/ssl_env.ctl
#  ssl2/gen_keystore_client.sh: config/certs/gen_keystore_client.sh
#  ssl2/gen_ca_cert.conf: config/certs/gen_ca_cert.conf
  config/cqlshrc.erb: root/.cassandra/cqlshrc
  ssl3/ssl_env.ctl.erb: config/certs/ssl_env.ctl
  ssl3/gen_keystore_client.sh: config/certs/gen_keystore_client.sh
  bin/creer_pem_cli_serv.sh: bin/creer_pem_cli_serv.sh
  bin/post-start.sh: bin/post-start
  config/jmx_exporter.yml: conf/jmx_exporter.yml
  bin/nodetool: bin/nodetool
  bin/sstableloader: bin/sstableloader
  
properties:
  bpm.enabled:
    description: |
      Switch to BPM (Bosh Process Manager) for running Cassandra. This brings
      the benefit of improved security measures at runtime.
    default: false
  cluster_name:
    description: |
      The name of the cluster. This is mainly used to prevent machines in one
      logical cluster from joining another.
    default: testcluster # 'Test Cluster'
  num_tokens:
    description: |
      Defines the number of tokens randomly assigned to each node of the
      instance group. The more tokens, relative to nodes of other instance
      groups, the larger the proportion of data that this node will store.

      When defining different instance groups for a single Cassandra cluster,
      each with varying hardware capabilities, then the number of tokens
      assigned to nodes of must be relative to their hardware capabilities.
    default: 256
  hinted_handoff_enabled:
    description: |
      Enables or disables hinted handoff. To enable per datacenter, add a list
      of datacenters. For example: 'hinted_handoff_enabled: DC1,DC2'. A hint
      indicates that the write needs to be replayed to an unavailable node.
      Cassandra writes the hint to a hints file on the coordinator node.

      See: <http://wiki.apache.org/cassandra/HintedHandoff>
      See: <https://www.datastax.com/dev/blog/modern-hinted-handoff>
    default: true
    example: DC1,DC2
  max_hint_window_in_ms:
    description: |
      Maximum amount of time (in milliseconds) during which Cassandra
      generates hints for an unresponsive node. After this interval, Cassandra
      does not generate any new hints for the node until it is back up and
      responsive. If the node goes down again, Cassandra starts a new
      interval.
    default: 10800000 # 3 hours
  hinted_handoff_throttle_in_kb:
    description: |
      Maximum amount of traffic per delivery thread in kilobytes per second.
      This rate reduces proportionally to the number of nodes in the cluster.
      For example, if there are two nodes in the cluster, each delivery thread
      uses the maximum rate. If there are three, each node throttles to half
      of the maximum, since the two nodes are expected to deliver hints
      simultaneously.
    default: 1024
  max_hints_delivery_threads:
    description: |
      Number of threads Cassandra uses to deliver hints. In multiple data-
      center deployments, consider increasing this number because cross data-
      center handoff is generally slower.
    default: 2
  authenticator:
    description: |
      The authentication backend. It implements IAuthenticator for identifying
      users. Available authenticators:

      - AllowAllAuthenticator:
        Disables authentication; Cassandra performs no checks.

      - PasswordAuthenticator:
        Authenticates users with user names and hashed passwords stored in the
        'system_auth.roles' table. Leaving the default replication factor of 1
        set for the 'system_auth' keyspace results in denial of access to the
        cluster if the single replica of the keyspace goes down.
    default: PasswordAuthenticator 
  authorizer:
    description: |
      The authorization backend. It implements IAuthenticator to limit access
      and provide permissions. Available authorizers:

      - AllowAllAuthorizer:
        Disables authorization: Cassandra allows any action to any user.

      - CassandraAuthorizer:
        Stores permissions in 'system_auth.permissions' table. Setting
        'system_auth_keyspace_replication_factor' to 1 results in denial of
        access to the cluster if the single replica of the keyspace goes down.
    default: CassandraAuthorizer
  permissions_validity_in_ms:
    description: |
      How many milliseconds permissions in cache remain valid. Depending on
      the authorizer, such as 'CassandraAuthorizer', fetching permissions can
      be resource intensive. This setting is disabled when set to 0 or when
      'authorizer' is set to 'AllowAllAuthorizer'.
    default: 4000 
  partitioner:
    description: |
      Sets the class that distributes rows (by partition key) across all nodes
      in the cluster. Any IPartitioner may be used, including your own as long
      as it is in the class path. For new clusters use the default
      partitioner.

      Cassandra provides the following partitioners for backwards compatibility:
      - RandomPartitioner
      - ByteOrderedPartitioner (deprecated)
      - OrderPreservingPartitioner (deprecated)
    default: org.apache.cassandra.dht.Murmur3Partitioner 
  persistent_directory:
    default: /var/vcap/store/cassandra
    description: point racine de l arborescence Cassandra pour stocker tous les fichiers data, commit log et saved_cache
  disk_failure_policy:
    description: |
      Sets how Cassandra responds to disk failure. Recommend settings: 'stop'
      or 'best_effort'. Valid values:

      - die:
        Shut down gossip and Thrift and kill the JVM for any file system
        errors or single SSTable errors, so the node can be replaced.

      - stop_paranoid:
        Shut down gossip and Thrift even for single SSTable errors.

      - stop:
        Shut down gossip and Thrift, leaving the node effectively dead, but
        available for inspection using JMX.

      - best_effort:
        Stop using the failed disk and respond to requests based on the
        remaining available SSTables. This allows obsolete data at consistency
        level of ONE.

      - ignore:
        Ignore fatal errors and lets the requests fail; all file system errors
        are logged but otherwise ignored. Cassandra acts as in versions prior
        to 1.2.
    default: stop 
  key_cache_size_in_mb:
    description: |
      A global cache setting for the maximum size of the key cache in memory
      (for all tables). If an empty string or a 'null' value is set, the cache
      is set to the smaller of 5% of the available heap (when heap size is
      above 2GB), or 100MB. To disable set to 0.
    default: 100
  key_cache_save_period:
    description: |
      Duration in seconds that keys are kept in cache. Saved caches greatly
      improve cold-start speeds and have relatively little effect on I/O.
    default: 14400 # 4 hours
  row_cache_size_in_mb:
    description: |
      Maximum size of the row cache in memory. The row cache can save more
      time than 'key_cache_size_in_mb', but it is space-intensive because it
      contains the entire row. Use the row cache only for hot rows or static
      rows. If you reduce the size, you may not get you hottest keys loaded on
      start up.
    default: 0
  row_cache_save_period:
    description: |
      The number of seconds that rows are kept in cache. This setting has
      limited use as described in 'row_cache_size_in_mb'.
    default: 0
  commitlog_sync:
    description: |

      The method that Cassandra uses to acknowledge writes in milliseconds:

      - periodic: (Default: 10000 milliseconds [10 seconds])
        With 'commitlog_sync_period_in_ms', controls how often the commit log
        is synchronized to disk. Periodic syncs are acknowledged immediately.

      - batch: (Default: disabled)
        Used with 'commitlog_sync_batch_window_in_ms' (Default: 2 ms), which
        is the maximum length of time that queries may be batched together.
    default: periodic
  commitlog_sync_period_in_ms:
    default: 2
    description: temps d attente d autres ecritures par cassandra avant de faire un sync. Utiliser si option batch activee. Acquittement retarde au sync.
  commitlog_segment_size_in_mb:
    description: |
      The size of an individual commitlog file segment. A commitlog segment
      may be archived, deleted, or recycled after all its data has been
      flushed to SSTables. This data can potentially include commitlog
      segments from every table in the system. The default size is usually
      suitable for most commitlog archiving, but if you want a finer
      granularity, 8 or 16 MB is reasonable.

      See also: <https://docs.datastax.com/en/cassandra/latest/cassandra/configuration/configLogArchive.html>
    default: 32
  concurrent_reads:
    description: |
      Workloads with more data than can fit in memory encounter a bottleneck
      in fetching data from disk during reads. Setting 'concurrent_reads' to
      (16 × number_of_drives) allows operations to queue low enough in the
      stack so that the OS and drives can reorder them. The default setting
      applies to both logical volume managed (LVM) and RAID drives.
    default: 32
  concurrent_writes:
    description: |
      Writes in Cassandra are rarely I/O bound, so the ideal number of
      concurrent writes depends on the number of CPU cores on the node. The
      recommended value is 8 × number_of_cpu_cores.
    default: 32
  file_cache_size_in_mb:
    description: |
      Total memory to use for SSTable-reading buffers. Defaults to the smaller
      of 1/4 of heap (when heap is less than 2GB) or 512MB.
    default: 512
  memtable_flush_writers:
    description: |
      The number of memtable flush writer threads. These threads are blocked
      by disk I/O, and each one holds a memtable in memory while blocked. If
      your data directories are backed by SSDs, increase this setting to the
      number of cores.

      (Default: Smaller of number of disks or number of cores with a minimum
      of 2 and a maximum of 8)
    default: 1
  trickle_fsync:
    description: |
      When set to 'true', causes fsync to force the operating system to flush
      the dirty buffers at the set interval 'trickle_fsync_interval_in_kb'.
      Enable this parameter to prevent sudden dirty buffer flushing from
      impacting read latencies. Recommended for use with SSDs, but not with
      HDDs.
    default: false
  trickle_fsync_interval_in_kb:
    description: |
      The size of the fsync in kilobytes.
    default: 10240 # 10MB
  storage_port:
    description: |
      The port for inter-node communication.
    default: 7000
  ssl_storage_port:
    description: |
      The SSL port for encrypted communication. Unused when
      'internode_encryption_mode' is set to 'none'.
    default: 7001
  start_native_transport:
    default: true
    description:
  native_transport_port:
    default: 9042
    description:
  native_transport_max_threads:
    default: 128
    description:
  native_transport_max_frame_size_in_mb:
    default: 256
    description:
  start_rpc:
    default: true
    description:
  rpc_address:
    default: localhost
    description:
  rpc_port:
    default: 9160
    description:
  rpc_keepalive:
    default: true
    description:
  rpc_server_type:
    default: sync
    description:
  rpc_min_threads:
    default: 16
    description:
  rpc_max_threads:
    default: 2048
    description:
  thrift_framed_transport_size_in_mb:
    default: 15
    description:
  incremental_backups:
    default: false
    description:
  snapshot_before_compaction:
    default: false
    description:
  auto_snapshot:
    default: true
    description:
  tombstone_warn_threshold:
    default: 1000
    description:
  tombstone_failure_threshold:
    default: 100000
    description:
  column_index_size_in_kb:
    default: 64
    description:
  concurrent_compactors:
    default: 4
    description:
  read_request_timeout_in_ms:
    default: 5000
    description:
  range_request_timeout_in_ms:
    default: 10000
    description:
  write_request_timeout_in_ms:
    default: 2000
    description:
  cas_contention_timeout_in_ms:
    default: 1000
    description:
  truncate_request_timeout_in_ms:
    default: 60000
    description:
  request_timeout_in_ms:
    default: 10000
    description:
  cross_node_timeout:
    default: false
    description:
  phi_convict_threshold:
    default: 8
    description:
  endpoint_snitch:
    default: PropertyFileSnitch
    description:
  dynamic_snitch_update_interval_in_ms:
    default: 100
    description:
  dynamic_snitch_reset_interval_in_ms:
    default: 600000
    description:
  dynamic_snitch_badness_threshold:
    default: 0.1
    description:
  request_scheduler:
    default: org.apache.cassandra.scheduler.NoScheduler
    description:
  request_scheduler_id:
    default: 
    description:
  internode_compression:
    default: none
    description:
  inter_dc_tcp_nodelay:
    default: true
    description:
  max_heap_size:
    default: 8G
    description:
  heap_newsize:
    default: 1G
    description:
  topology:
    description:
  cass_pwd:
    default: cassandra
  cassDbCertificate:
    default: "NOT INITIALIZED"
    description: use tls/ssl for authent and transactions 
  cert:
    type: certificate
    description: cluster certificate
  cass_KSP:
    default: 
    description: cassandra ssl keystore passwd
  validate_ssl_TF:
    default: false
    description: cassandra ssl validate true or false

  system_auth_keyspace_replication_factor:
    description: |
      The replication factor to apply to the 'system_auth' keyspace that holds
      users and passwords.
    default: 3

  disable_linux_swap:
    description: |
      Suppress Linux swap on pre-start, in order to ensure good
      performances for Cassandra.

      This is a workaround for IaaS where the property
      'env.bosh.swap_size' set to 0 does not properly suppress Linux
      swap.

      In Bosh-Lite, you need to set this to 'false', as the 'swapoff'
      command cannot be invoked within Garden containers.
    default: true
  internode_encryption_mode:
    default: none
    description: |

      Enables or disables encryption of inter-node communication using
      the TLS_RSA_WITH_AES_128_CBC_SHA cipher suite for
      authentication, key exchange, and encryption of data
      transfers. Use the DHE/ECDHE ciphers, such as
      TLS_DHE_RSA_WITH_AES_128_CBC_SHA if running in (Federal
      Information Processing Standard) FIPS 140 compliant
      mode. Available inter-node options:

      * 'all': Encrypt all inter-node communications.

      * 'none': No encryption.

      * 'dc': Encrypt the traffic between the datacenters (server only).

      * 'rack': Encrypt the traffic between the racks (server only).

      See: <https://docs.datastax.com/en/cassandra/3.0/cassandra/configuration/configCassandra_yaml.html#configCassandra_yaml__ul_gbd_cns_1k>

  client_encryption.enabled:
    default: false
    description: |
      Enables or disables client-to-node encryption.
  client_encryption.require_client_auth:
    default: false
    description: |
      Enables or disables certificate authentication.
  jmx_exporter_enabled:
    default: true
    description: scrape and expose mBeans of a JMX target
  jmx_exporter_port:
    default: 9001
    description: Port on which to expose metrics and web interface

